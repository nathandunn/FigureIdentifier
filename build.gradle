/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10/userguide/tutorial_groovy_projects.html
 */

buildscript {
    ext {
        dl4j_version = "1.0.0-beta3"
        nd4j_version = "1.0.0-beta3"
//        kotlin_version = "1.2.31"
    }
    repositories {
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
//    }
}

//plugins {
//    // Apply the groovy plugin to add support for Groovy
//    id 'scala' // https://docs.gradle.org/current/userguide/scala_plugin.html
//    id 'groovy'
//
//    // Apply the application plugin to add support for building an application
//    id 'application'
//}

apply plugin: "scala"
apply plugin: "groovy"
apply plugin: "application"

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
}

// Define the main class for the application
mainClassName = 'CatDogApp'
//mainClassName = 'org.bbop.inca.SampleScala'
//deepLearningVersion="0.9.1"
//deepleanrning4jVersion = '1.0.0-beta2'
//nd4j.version = '1.0.0-beta3'
//dl4j.version = '1.0.0-beta3'

dependencies {
    // Use the latest Groovy version for building this library
    compile 'org.codehaus.groovy:groovy-all:2.4.15'

    // Use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'

    compile 'org.scala-lang:scala-library:2.11.12'
    testCompile 'org.scalatest:scalatest_2.11:3.0.0'
    testCompile 'junit:junit:4.12'


    testRuntime 'org.scala-lang.modules:scala-xml_2.11:1.1.0'

//    zinc 'com.typesafe.zinc:zinc:0.3.9'

    // app depdencencies
//    testCompile group: 'org.nd4j', name: 'nd4j-native', version: '0.9.1'
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: '0.9.1'
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-zoo', version: '0.9.1'
//    compile group: 'org.nd4j', name: 'nd4j-native-platform', version: '0.9.1'


    compile group: 'org.deeplearning4j', name: 'deeplearning4j-core', version:"${dl4j_version}"
    compile group: 'org.deeplearning4j', name: 'deeplearning4j-zoo', version:"${dl4j_version}"
    compile group: 'org.deeplearning4j', name: 'deeplearning4j-ui_2.11', version: "${dl4j_version}"
//    testCompile group: 'org.nd4j', name: 'nd4j-native', version: "${nd4j_version}"
    compile group: 'org.nd4j', name: 'nd4j-native-platform', version:"${nd4j_version}"
    compile group: 'org.nd4j', name: 'nd4j-api', version: "${nd4j_version}"


//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-nn', version: '0.9.1'
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-nlp', version: '0.9.1'

    compile group: 'com.typesafe.play', name: 'play-json_2.12', version: '2.6.10'
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: deeplearningversion
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-n', version: deeplearningversion
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-nlp', version: deeplearningversion
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-zoo', version: deeplearningversion
//    compile group: 'org.nd4j', name: 'nd4j-native-platform', version: dl4j_version
//    compile group: 'org.nd4j', name: 'nd4j-api', version: '0.0.3'


    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'


}

//configurations.all {
//    resolutionStrategy.force "org.scala-lang:scala-library:2.11.12"
//}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

//sourceSets.main.output.classesDir = new File(buildDir, "classes/main")


sourceSets.main.output.classesDir = new File(buildDir, "classes/main")
compileGroovy.dependsOn compileScala


sourceSets {
    main {
        java {
            srcDirs   'src/main/scala'
            srcDirs   'src/main/groovy'
        }
    }
}
